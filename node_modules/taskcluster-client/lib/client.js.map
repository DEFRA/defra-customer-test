{
  "version": 3,
  "sources": [
    "client.js"
  ],
  "names": [
    "request",
    "require",
    "debug",
    "_",
    "assert",
    "hawk",
    "url",
    "crypto",
    "slugid",
    "http",
    "https",
    "Promise",
    "querystring",
    "AGENT_OPTIONS",
    "maxSockets",
    "maxFreeSockets",
    "keepAlive",
    "DEFAULT_AGENTS",
    "Agent",
    "exports",
    "agents",
    "_defaultOptions",
    "credentials",
    "clientId",
    "process",
    "env",
    "TASKCLUSTER_CLIENT_ID",
    "accessToken",
    "TASKCLUSTER_ACCESS_TOKEN",
    "certificate",
    "TASKCLUSTER_CERTIFICATE",
    "timeout",
    "retries",
    "delayFactor",
    "randomizationFactor",
    "maxDelay",
    "makeRequest",
    "client",
    "method",
    "payload",
    "query",
    "stringify",
    "length",
    "req",
    "toUpperCase",
    "agent",
    "_httpAgent",
    "_timeout",
    "undefined",
    "send",
    "_options",
    "header",
    "id",
    "key",
    "algorithm",
    "ext",
    "_extData",
    "set",
    "field",
    "createClient",
    "reference",
    "name",
    "Client",
    "options",
    "defaults",
    "baseUrl",
    "exchangePrefix",
    "replace",
    "stats",
    "Error",
    "isHttps",
    "indexOf",
    "JSON",
    "parse",
    "err",
    "authorizedScopes",
    "Array",
    "keys",
    "Buffer",
    "toString",
    "prototype",
    "use",
    "optionsUpdates",
    "entries",
    "filter",
    "entry",
    "type",
    "forEach",
    "nb_args",
    "args",
    "input",
    "optKeys",
    "slice",
    "call",
    "arguments",
    "N",
    "endpoint",
    "route",
    "text",
    "arg",
    "index",
    "param",
    "encodeURIComponent",
    "includes",
    "join",
    "attempts",
    "that",
    "monitor",
    "start",
    "hrtime",
    "retryRequest",
    "sendRequest",
    "then",
    "res",
    "d",
    "measure",
    "count",
    "headers",
    "body",
    "response",
    "status",
    "message",
    "code",
    "statusCode",
    "state",
    "delay",
    "Math",
    "pow",
    "rf",
    "random",
    "min",
    "accept",
    "setTimeout",
    "entryReference",
    "routingKeyPattern",
    "Object",
    "routingKey",
    "map",
    "value",
    "constant",
    "multipleWords",
    "exchange",
    "routingKeyReference",
    "cloneDeep",
    "buildUrl",
    "shift",
    "supportsOpts",
    "buildSignedUrl",
    "expiration",
    "pop",
    "requestUrl",
    "apply",
    "bewit",
    "getBewit",
    "ttlSec",
    "urlParts",
    "search",
    "format",
    "apis",
    "forIn",
    "api",
    "config",
    "createTemporaryCredentials",
    "now",
    "Date",
    "setMinutes",
    "getMinutes",
    "scopes",
    "expiry",
    "scope",
    "getTime",
    "isNamed",
    "cert",
    "version",
    "seed",
    "v4",
    "signature",
    "issuer",
    "sig",
    "createHmac",
    "update",
    "digest",
    "credentialInformation",
    "result",
    "active",
    "reject",
    "anonClient",
    "Auth",
    "clientLookup",
    "expires",
    "disabled",
    "credClient",
    "scopeLookup",
    "currentScopes",
    "all"
  ],
  "mappings": "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",
  "file": "client.js",
  "sourceRoot": "../src",
  "sourcesContent": [
    "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nvar request     = require('superagent');\nvar debug       = require('debug')('taskcluster-client');\nvar _           = require('lodash');\nvar assert      = require('assert');\nvar hawk        = require('hawk');\nvar url         = require('url');\nvar crypto      = require('crypto');\nvar slugid      = require('slugid');\nvar http        = require('http');\nvar https       = require('https');\nvar Promise     = require('promise');\nvar querystring = require('querystring');\n\n/** Default options for our http/https global agents */\nvar AGENT_OPTIONS = {\n  maxSockets:       50,\n  maxFreeSockets:   0,\n  keepAlive:        false,\n};\n\n/**\n * Generally shared agents is optimal we are creating our own rather then\n * defaulting to the global node agents primarily so we can tweak this across\n * all our components if needed...\n */\nvar DEFAULT_AGENTS = {\n  http:   new http.Agent(AGENT_OPTIONS),\n  https:  new https.Agent(AGENT_OPTIONS),\n};\n\n// Exports agents, consumers can provide their own default agents and tests\n// can call taskcluster.agents.http.destroy() when running locally, otherwise\n// tests won't terminate (if they are configured with keepAlive)\nexports.agents = DEFAULT_AGENTS;\n\n// Default options stored globally for convenience\nvar _defaultOptions = {\n  credentials: {\n    clientId:     process.env.TASKCLUSTER_CLIENT_ID,\n    accessToken:  process.env.TASKCLUSTER_ACCESS_TOKEN,\n    certificate:  process.env.TASKCLUSTER_CERTIFICATE,\n  },\n  // Request time out (defaults to 30 seconds)\n  timeout:        30 * 1000,\n  // Max number of request retries\n  retries:        5,\n  // Multiplier for computation of retry delay: 2 ^ retry * delayFactor,\n  // 100 ms is solid for servers, and 500ms - 1s is suitable for background\n  // processes\n  delayFactor:    100,\n  // Randomization factor added as.\n  // delay = delay * random([1 - randomizationFactor; 1 + randomizationFactor])\n  randomizationFactor: 0.25,\n  // Maximum retry delay (defaults to 30 seconds)\n  maxDelay:       30 * 1000,\n};\n\n/** Make a request for a Client instance */\nvar makeRequest = function(client, method, url, payload, query) {\n  // Add query to url if present\n  if (query) {\n    query = querystring.stringify(query);\n    if (query.length > 0) {\n      url += '?' + query;\n    }\n  }\n\n  // Construct request object\n  var req = request(method.toUpperCase(), url);\n  // Set the http agent for this request, if supported in the current\n  // environment (browser environment doesn't support http.Agent)\n  if (req.agent) {\n    req.agent(client._httpAgent);\n  }\n\n  // Timeout for each individual request.\n  req.timeout(client._timeout);\n\n  // Send payload if defined\n  if (payload !== undefined) {\n    req.send(payload);\n  }\n\n  // Authenticate, if credentials are provided\n  if (client._options.credentials &&\n      client._options.credentials.clientId &&\n      client._options.credentials.accessToken) {\n    // Create hawk authentication header\n    var header = hawk.client.header(url, method.toUpperCase(), {\n      credentials: {\n        id:         client._options.credentials.clientId,\n        key:        client._options.credentials.accessToken,\n        algorithm:  'sha256',\n      },\n      ext:          client._extData,\n    });\n    req.set('Authorization', header.field);\n  }\n\n  // Return request\n  return req;\n};\n\n/**\n * Create a client class from a JSON reference, and an optional `name`, which is\n * mostly intended for debugging, error messages and stats.\n *\n * Returns a Client class which can be initialized with following options:\n * options:\n * {\n *   // TaskCluster credentials, if not provided fallback to defaults from\n *   // environment variables, if defaults are not explicitly set with\n *   // taskcluster.config({...}).\n *   // To create a client without authentication (and not using defaults)\n *   // use `credentials: {}`\n *   credentials: {\n *     clientId:    '...', // ClientId\n *     accessToken: '...', // AccessToken for clientId\n *     certificate: {...}  // Certificate, if temporary credentials\n *   },\n *   // Limit the set of scopes requests with this client may make.\n *   // Note, that your clientId must have a superset of the these scopes.\n *   authorizedScopes:  ['scope1', 'scope2', ...]\n *   baseUrl:         'http://.../v1'   // baseUrl for API requests\n *   exchangePrefix:  'queue/v1/'       // exchangePrefix prefix\n *   retries:         5,                // Maximum number of retries\n *   monitor:         await Monitor()   // From taskcluster-lib-monitor\n * }\n *\n * `baseUrl` and `exchangePrefix` defaults to values from reference.\n */\nexports.createClient = function(reference, name) {\n  if (!name || typeof name !== 'string') {\n    name = 'Unknown';\n  }\n\n  // Client class constructor\n  var Client = function(options) {\n    this._options = _.defaults({}, options || {}, {\n      baseUrl:          reference.baseUrl        || '',\n      exchangePrefix:   reference.exchangePrefix || '',\n    }, _defaultOptions);\n\n    // Remove possible trailing slash from baseUrl\n    this._options.baseUrl = this._options.baseUrl.replace(/\\/$/, '');\n\n    if (this._options.stats) {\n      throw new Error('options.stats is now deprecated! Use options.monitor instead.');\n    }\n\n    if (this._options.randomizationFactor < 0 ||\n        this._options.randomizationFactor >= 1) {\n      throw new Error('options.randomizationFactor must be between 0 and 1!');\n    }\n\n    // Shortcut for which default agent to use...\n    var isHttps = this._options.baseUrl.indexOf('https') === 0;\n\n    if (this._options.agent) {\n      // We have explicit options for new agent create one...\n      this._httpAgent = isHttps ?\n        new https.Agent(this._options.agent) :\n        new http.Agent(this._options.agent);\n    } else {\n      // Use default global agent(s)...\n      this._httpAgent = isHttps ?\n        DEFAULT_AGENTS.https :\n        DEFAULT_AGENTS.http;\n    }\n\n    // Timeout for each _individual_ http request.\n    this._timeout = this._options.timeout;\n\n    // Build ext for hawk requests\n    this._extData = undefined;\n    if (this._options.credentials &&\n        this._options.credentials.clientId &&\n        this._options.credentials.accessToken) {\n      var ext = {};\n\n      // If there is a certificate we have temporary credentials, and we\n      // must provide the certificate\n      if (this._options.credentials.certificate) {\n        ext.certificate = this._options.credentials.certificate;\n        // Parse as JSON if it's a string\n        if (typeof ext.certificate === 'string') {\n          try {\n            ext.certificate = JSON.parse(ext.certificate);\n          } catch (err) {\n            debug('Failed to parse credentials.certificate, err: %s, JSON: %j',\n              err, err);\n            throw new Error('JSON.parse(): Failed for configured certificate');\n          }\n        }\n      }\n\n      // If set of authorized scopes is provided, we'll restrict the request\n      // to only use these scopes\n      if (this._options.authorizedScopes instanceof Array) {\n        ext.authorizedScopes = this._options.authorizedScopes;\n      }\n\n      // ext has any keys we better base64 encode it, and set ext on extra\n      if (_.keys(ext).length > 0) {\n        this._extData = new Buffer(JSON.stringify(ext)).toString('base64');\n      }\n    }\n  };\n\n  Client.prototype.use = function(optionsUpdates) {\n    var options = _.defaults({}, optionsUpdates, this._options);\n    return new Client(options);\n  };\n\n  // For each function entry create a method on the Client class\n  reference.entries.filter(function(entry) {\n    return entry.type === 'function';\n  }).forEach(function(entry) {\n    // Get number of arguments\n    var nb_args = entry.args.length;\n    if (entry.input) {\n      nb_args += 1;\n    }\n    // Get the query-string options taken\n    var optKeys = entry.query || [];\n\n    // Create method on prototype\n    Client.prototype[entry.name] = function() {\n      // Convert arguments to actual array\n      var args = Array.prototype.slice.call(arguments);\n      // Validate number of arguments\n      var N = args.length;\n      if (N != nb_args && (optKeys.length === 0 || N != nb_args + 1)) {\n        throw new Error('Function ' + entry.name + ' takes ' + nb_args +\n                        ' arguments, but was given ' + N +\n                        ' arguments');\n      }\n      // Substitute parameters into route\n      var endpoint = entry.route.replace(/<([^<>]+)>/g, function(text, arg) {\n        var index = entry.args.indexOf(arg);\n        if (index !== -1) {\n          var param = args[index];\n          if (typeof param !== 'string' && typeof param !== 'number') {\n            throw new Error('URL parameter ' + arg + ' must be a string, but ' +\n                            'we received a: ' + typeof param);\n          }\n          return encodeURIComponent(param);\n        }\n        return text; // Preserve original\n      });\n      // Create url for the request\n      var url = this._options.baseUrl + endpoint;\n      // Add payload if one is given\n      var payload = undefined;\n      if (entry.input) {\n        payload = args[nb_args - 1];\n      }\n      // Find query string options (if present)\n      var query = args[nb_args] || null;\n      if (query) {\n        _.keys(query).forEach(function(key) {\n          if (!_.includes(optKeys, key)) {\n            throw new Error('Function ' + entry.name + ' takes options: ' +\n                            optKeys.join(', ') + ' but was given ' + key);\n          }\n        });\n      }\n\n      // Count request attempts\n      var attempts = 0;\n      var that = this;\n\n      var monitor = this._options.monitor;\n      if (monitor) {\n        var start = process.hrtime();\n      }\n\n      // Retry the request, after a delay depending on number of retries\n      var retryRequest = function() {\n        // Send request\n        var sendRequest = function() {\n          debug('Calling: %s, retry: %s', entry.name, attempts - 1);\n          // Make request and handle response or error\n          return makeRequest(\n            that,\n            entry.method,\n            url,\n            payload,\n            query\n          ).then(function(res) {\n            // If request was successful, accept the result\n            debug('Success calling: %s, (%s retries)',\n              entry.name, attempts - 1);\n            if (monitor) {\n              var d = process.hrtime(start);\n              monitor.measure([entry.name, 'success'], d[0] * 1000 + d[1] / 1000000);\n              monitor.count([entry.name, 'success']);\n            }\n            if (!_.includes(res.headers['content-type'], 'application/json') || !res.body) {\n              debug('Empty response from server: call: %s, method: %s', entry.name, entry.method);\n              return undefined;\n            }\n            return res.body;\n          }, function(err) {\n            // If we got a response we read the error code from the response\n            var res = err.response;\n            if (res) {\n              // Decide if we should retry\n              if (attempts <= that._options.retries &&\n                  res.status >= 500 &&  // Check if it's a 5xx error\n                  res.status < 600) {\n                debug('Error calling: %s now retrying, info: %j',\n                  entry.name, res.body);\n                return retryRequest();\n              }\n              // If not retrying, construct error object and reject\n              debug('Error calling: %s NOT retrying!, info: %j',\n                entry.name, res.body);\n              var message = 'Unknown Server Error';\n              if (res.status === 401) {\n                message = 'Authentication Error';\n              }\n              if (res.status === 500) {\n                message = 'Internal Server Error';\n              }\n              err = new Error(res.body.message || message);\n              err.body = res.body;\n              err.code = res.body.code || 'UnknownError';\n              err.statusCode = res.status;\n              if (monitor) {\n                var d = process.hrtime(start);\n\n                var state = 'client-error';\n                if (res.statusCode >= 500) {\n                  state = 'server-error';\n                }\n                monitor.measure([entry.name, state], d[0] * 1000 + d[1] / 1000000);\n                monitor.count([entry.name, state]);\n              }\n              throw err;\n            }\n\n            // Decide if we should retry\n            if (attempts <= that._options.retries) {\n              debug('Request error calling %s (retrying), err: %s, JSON: %s',\n                entry.name, err, err);\n              return retryRequest();\n            }\n            debug('Request error calling %s NOT retrying!, err: %s, JSON: %s',\n              entry.name, err, err);\n            if (monitor) {\n              var d = process.hrtime(start);\n              monitor.measure([entry.name, 'connection-error'], d[0] * 1000 + d[1] / 1000000);\n              monitor.count([entry.name, 'connection-error']);\n            }\n            throw err;\n          });\n        };\n\n        // Increment attempt count, but track how many we had before.\n        attempts += 1;\n\n        // If this is the first retry, ie we haven't retried yet, we make the\n        // request immediately\n        if (attempts === 1) {\n          return sendRequest();\n        } else {\n          var delay;\n          // First request is attempt = 1, so attempt = 2 is the first retry\n          // we subtract one to get exponents: 1, 2, 3, 4, 5, ...\n          delay = Math.pow(2, attempts - 1) * that._options.delayFactor;\n          // Apply randomization factor\n          var rf = that._options.randomizationFactor;\n          delay *= Math.random() * 2 * rf + 1 - rf;\n          // Always limit with a maximum delay\n          delay = Math.min(delay, that._options.maxDelay);\n          // Sleep then send the request\n          return new Promise(function(accept) {\n            setTimeout(accept, delay);\n          }).then(function() {\n            return sendRequest();\n          });\n        }\n      };\n\n      // Start the retry request loop\n      return retryRequest();\n    };\n    // Add reference for buildUrl and signUrl\n    Client.prototype[entry.name].entryReference = entry;\n  });\n\n  // For each topic-exchange entry\n  reference.entries.filter(function(entry) {\n    return entry.type === 'topic-exchange';\n  }).forEach(function(entry) {\n    // Create function for routing-key pattern construction\n    Client.prototype[entry.name] = function(routingKeyPattern) {\n      if (typeof routingKeyPattern !== 'string') {\n        // Allow for empty routing key patterns\n        if (routingKeyPattern === undefined ||\n            routingKeyPattern === null) {\n          routingKeyPattern = {};\n        }\n        // Check that the routing key pattern is an object\n        assert(routingKeyPattern instanceof Object,\n          'routingKeyPattern must be an object');\n\n        // Construct routingkey pattern as string from reference\n        routingKeyPattern = entry.routingKey.map(function(key) {\n          // Get value for key\n          var value = routingKeyPattern[key.name];\n          // Routing key constant entries cannot be modified\n          if (key.constant) {\n            value =  key.constant;\n          }\n          // If number convert to string\n          if (typeof value === 'number') {\n            return '' + value;\n          }\n          // Validate string and return\n          if (typeof value === 'string') {\n            // Check for multiple words\n            assert(key.multipleWords || value.indexOf('.') === -1,\n              'routingKey pattern \\'' + value + '\\' for ' + key.name +\n                   ' cannot contain dots as it does not hold multiple words');\n            return value;\n          }\n          // Check that we haven't got an invalid value\n          assert(value === null || value === undefined,\n            'Value: \\'' + value + '\\' is not supported as routingKey '+\n                'pattern for ' + key.name);\n          // Return default pattern for entry not being matched\n          return key.multipleWords ? '#' : '*';\n        }).join('.');\n      }\n\n      // Return values necessary to bind with EventHandler\n      return {\n        exchange:             this._options.exchangePrefix + entry.exchange,\n        routingKeyPattern:    routingKeyPattern,\n        routingKeyReference:  _.cloneDeep(entry.routingKey),\n      };\n    };\n  });\n\n  // Utility function to build the request URL for given method and\n  // input parameters\n  Client.prototype.buildUrl = function() {\n    // Convert arguments to actual array\n    var args = Array.prototype.slice.call(arguments);\n    if (args.length == 0) {\n      throw new Error('buildUrl(method, arg1, arg2, ...) takes a least one ' +\n                        'argument!');\n    }\n    // Find the method\n    var method = args.shift();\n    var entry  = method.entryReference;\n    if (!entry || entry.type !== 'function') {\n      throw new Error('method in buildUrl(method, arg1, arg2, ...) must be ' +\n                        'an API method from the same object!');\n    }\n\n    // Get the query-string options taken\n    var optKeys = entry.query || [];\n    var supportsOpts = optKeys.length !== 0;\n\n    debug('build url for: ' + entry.name);\n    // Validate number of arguments\n    var N = entry.args.length;\n    if (args.length !== N && (!supportsOpts || args.length !== N + 1)) {\n      throw new Error('Function ' + entry.name + 'buildUrl() takes ' +\n                        (N + 1) + ' arguments, but was given ' +\n                        (args.length + 1) + ' arguments');\n    }\n\n    // Substitute parameters into route\n    var endpoint = entry.route.replace(/<([^<>]+)>/g, function(text, arg) {\n      var index = entry.args.indexOf(arg);\n      if (index !== -1) {\n        var param = args[index];\n        if (typeof param !== 'string' && typeof param !== 'number') {\n          throw new Error('URL parameter ' + arg + ' must be a string, but ' +\n                            'we received a: ' + typeof param);\n        }\n        return encodeURIComponent(param);\n      }\n      return text; // Preserve original\n    });\n\n      // Find query string options (if present)\n    var query = args[N] || '';\n    if (query) {\n      _.keys(query).forEach(function(key) {\n        if (!_.includes(optKeys, key)) {\n          throw new Error('Function ' + entry.name + ' takes options: ' +\n                            optKeys.join(', ') + ' but was given ' + key);\n        }\n      });\n\n      query = querystring.stringify(query);\n      if (query.length > 0) {\n        query = '?' + query;\n      }\n    }\n\n    return this._options.baseUrl + endpoint + query;\n  };\n\n  // Utility function to construct a bewit URL for GET requests\n  Client.prototype.buildSignedUrl = function() {\n    // Convert arguments to actual array\n    var args = Array.prototype.slice.call(arguments);\n    if (args.length == 0) {\n      throw new Error('buildSignedUrl(method, arg1, arg2, ..., [options]) ' +\n                        'takes a least one argument!');\n    }\n\n    // Find method and reference entry\n    var method = args[0];\n    var entry  = method.entryReference;\n    if (entry.method !== 'get') {\n      throw new Error('buildSignedUrl only works for GET requests');\n    }\n\n    // Default to 15 minutes before expiration\n    var expiration = 15 * 60;\n\n    // Check if method supports query-string options\n    var supportsOpts = (entry.query || []).length !== 0;\n\n    // if longer than method + args, then we have options too\n    var N = entry.args.length + 1;\n    if (supportsOpts) {\n      N += 1;\n    }\n    if (args.length > N) {\n      // Get request options\n      var options = args.pop();\n\n      // Get expiration from options\n      expiration = options.expiration || expiration;\n\n      // Complain if expiration isn't a number\n      if (typeof expiration !== 'number') {\n        throw new Error('options.expiration must be a number');\n      }\n    }\n\n    // Build URL\n    var requestUrl = this.buildUrl.apply(this, args);\n\n    // Check that we have credentials\n    if (!this._options.credentials.clientId) {\n      throw new Error('credentials must be given');\n    }\n    if (!this._options.credentials.accessToken) {\n      throw new Error('accessToken must be given');\n    }\n\n    // Create bewit (this is messed up, function differs in browser)\n    var bewit = (hawk.client.getBewit || hawk.client.bewit)(requestUrl, {\n      credentials:    {\n        id:         this._options.credentials.clientId,\n        key:        this._options.credentials.accessToken,\n        algorithm:  'sha256',\n      },\n      ttlSec:         expiration,\n      ext:            this._extData,\n    });\n\n      // Add bewit to requestUrl\n    var urlParts = url.parse(requestUrl);\n    if (urlParts.search) {\n      urlParts.search += '&bewit=' + bewit;\n    } else {\n      urlParts.search = '?bewit=' + bewit;\n    }\n\n    // Return formatted URL\n    return url.format(urlParts);\n  };\n\n  // Return client class\n  return Client;\n};\n\n// Load data from apis.js\nvar apis = require('./apis');\n\n// Instantiate clients\n_.forIn(apis, function(api, name) {\n  exports[name] = exports.createClient(api.reference, name);\n});\n\n/**\n * Update default configuration\n *\n * Example: `Client.config({credentials: {...}});`\n */\nexports.config = function(options) {\n  _defaultOptions = _.defaults({}, options, _defaultOptions);\n};\n\n/**\n * Construct a set of temporary credentials.\n *\n * options:\n * {\n *  start:        new Date(),   // Start time of credentials (defaults to now)\n *  expiry:       new Date(),   // Credentials expiration time\n *  scopes:       ['scope'...], // Scopes granted (defaults to empty-set)\n *  clientId:     '...',  // *optional* name to create named temporary credential\n *  credentials: {        // (defaults to use global config, if available)\n *    clientId:    '...', // ClientId\n *    accessToken: '...', // AccessToken for clientId\n *  },\n * }\n *\n * Note that a named temporary credential is only valid if the issuing credentials\n * have the scope 'auth:create-client:<name>'.  This function does not check for\n * this scope, but it will be checked when the credentials are used.\n *\n * Returns an object on the form: {clientId, accessToken, certificate}\n */\nexports.createTemporaryCredentials = function(options) {\n  assert(options, 'options are required');\n\n  // Get now as default value for start\n  var now = new Date();\n  now.setMinutes(now.getMinutes() - 5); // subtract 5 min for clock drift\n\n  // Set default options\n  options = _.defaults({}, options, {\n    start:      now,\n    scopes:     [],\n  }, _defaultOptions);\n\n  // Validate options\n  assert(options.credentials,             'options.credentials is required');\n  assert(options.credentials.clientId,\n    'options.credentials.clientId is required');\n  assert(options.credentials.accessToken,\n    'options.credentials.accessToken is required');\n  assert(options.credentials.certificate === undefined ||\n         options.credentials.certificate === null,\n  'temporary credentials cannot be used to make new temporary ' +\n         'credentials; ensure that options.credentials.certificate is null');\n  assert(options.start instanceof Date,   'options.start must be a Date');\n  assert(options.expiry instanceof Date,  'options.expiry must be a Date');\n  assert(options.scopes instanceof Array, 'options.scopes must be an array');\n  options.scopes.forEach(function(scope) {\n    assert(typeof scope === 'string',\n      'options.scopes must be an array of strings');\n  });\n  assert(options.expiry.getTime() - options.start.getTime() <=\n         31 * 24 * 60 * 60 * 1000, 'Credentials cannot span more than 31 days');\n\n  var isNamed = !!options.clientId;\n\n  if (isNamed) {\n    assert(options.clientId !== options.credentials.clientId,\n      'Credential issuer must be different from the name');\n  }\n\n  // Construct certificate\n  var cert = {\n    version:    1,\n    scopes:     _.cloneDeep(options.scopes),\n    start:      options.start.getTime(),\n    expiry:     options.expiry.getTime(),\n    seed:       slugid.v4() + slugid.v4(),\n    signature:  null,  // generated later\n  };\n  if (isNamed) {\n    cert.issuer = options.credentials.clientId;\n  }\n\n  // Construct signature\n  var sig = crypto.createHmac('sha256', options.credentials.accessToken);\n  sig.update('version:'    + cert.version + '\\n');\n  if (isNamed) {\n    sig.update('clientId:' + options.clientId + '\\n');\n    sig.update('issuer:'   + options.credentials.clientId + '\\n');\n  }\n  sig.update('seed:'       + cert.seed + '\\n');\n  sig.update('start:'      + cert.start + '\\n');\n  sig.update('expiry:'     + cert.expiry + '\\n');\n  sig.update('scopes:\\n');\n  sig.update(cert.scopes.join('\\n'));\n  cert.signature = sig.digest('base64');\n\n  // Construct temporary key\n  var accessToken = crypto\n    .createHmac('sha256', options.credentials.accessToken)\n    .update(cert.seed)\n    .digest('base64')\n    .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n    .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n    .replace(/=/g,  '');  // Drop '==' padding\n\n  // Return the generated temporary credentials\n  return {\n    clientId:     isNamed ? options.clientId : options.credentials.clientId,\n    accessToken:  accessToken,\n    certificate:  JSON.stringify(cert),\n  };\n};\n\n/**\n * Get information about a set of credentials.\n *\n * credentials: {\n *   clientId,\n *   accessToken,\n *   certificate,           // optional\n * }\n *\n * result: Promise for\n * {\n *    clientId: ..,         // name of the credential\n *    type: ..,             // type of credential, e.g., \"temporary\"\n *    active: ..,           // active (valid, not disabled, etc.)\n *    start: ..,            // validity start time (if applicable)\n *    expiry: ..,           // validity end time (if applicable)\n *    scopes: [...],        // associated scopes (if available)\n * }\n */\nexports.credentialInformation = function(credentials) {\n  var result = {};\n  var issuer = credentials.clientId;\n\n  result.clientId = issuer;\n  result.active = true;\n\n  // distinguish permacreds from temporary creds\n  if (credentials.certificate) {\n    result.type = 'temporary';\n    var cert;\n    if (typeof credentials.certificate === 'string') {\n      try {\n        cert = JSON.parse(credentials.certificate);\n      } catch (err) {\n        return Promise.reject(err);\n      }\n    } else {\n      cert = credentials.certificate;\n    }\n    result.scopes = cert.scopes;\n    result.start = new Date(cert.start);\n    result.expiry = new Date(cert.expiry);\n\n    if (cert.issuer) {\n      issuer = cert.issuer;\n    }\n  } else {\n    result.type = 'permanent';\n  }\n\n  var anonClient = new exports.Auth();\n  var clientLookup = anonClient.client(issuer).then(function(client) {\n    var expires = new Date(client.expires);\n    if (!result.expiry || result.expiry > expires) {\n      result.expiry = expires;\n    }\n    if (client.disabled) {\n      result.active = false;\n    }\n  });\n\n  var credClient = new exports.Auth({credentials: credentials});\n  var scopeLookup = credClient.currentScopes().then(function(response) {\n    result.scopes = response.scopes;\n  });\n\n  return Promise.all([clientLookup, scopeLookup]).then(function() {\n    // re-calculate \"active\" based on updated start/expiration\n    var now = new Date();\n    if (result.start && result.start > now) {\n      result.active = false;\n    } else if (result.expiry && now > result.expiry) {\n      result.active = false;\n    }\n\n    return result;\n  });\n};\n"
  ]
}
